@using X.PagedList.Web.Common
@model X.PagedList.IPagedList<Profile>
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    @using (Html.BeginForm("Index", "Home", FormMethod.Get))
    {
        <p>
            I'll find everything: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
            <input type="submit" class="btn btn-primary" value="Search"/>
        </p>
    }
    <table class="table">
        <tr>
            <th> @Html.ActionLink("Id", "Index", new {sortOrder = ViewBag.IdSortParam, currentFilter = ViewBag.CurrentFilter})</th>
            <th> @Html.ActionLink("First Name", "Index", new {sortOrder = ViewBag.FirstNameSortParam, currentFilter = ViewBag.CurrentFilter})</th>
            <th> @Html.ActionLink("Last Name", "Index", new {sortOrder = ViewBag.LastNameSortParam, currentFilter = ViewBag.CurrentFilter})</th>
            <th> @Html.ActionLink("Birthday", "Index", new {sortOrder = ViewBag.BirthdaySortParam, currentFilter = ViewBag.CurrentFilter})</th>
        </tr>
        @foreach (var item in Model)
        {
            <tr>
                <td> @Html.Raw(item.Id.ToString())</td>
                <td> @Html.Raw(item.FirstName)</td>
                <td> @Html.Raw(item.LastName)</td>
                <td> @Html.Raw(item.Birthday.ToString("d"))</td>
            </tr>
        }
    </table>
    <br/>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index", new
    {
        page,
        sortOrder = ViewBag.CurrentSort,
        currentFilter = ViewBag.CurrentFilter
    }),
        new PagedListRenderOptions
        {
            LiElementClasses = new[] {"page-item"},
            PageClasses = new[]
            {
                "page-link"
            }
        })
</div>